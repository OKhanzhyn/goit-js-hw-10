{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst startBtn = document.querySelector('button [type=\"button\"]');\nconst timerFace = document.querySelector(\".timer\");\n\nconst inputInit = document.querySelector('input#datetime-picker');\n\nlet userSelectedDate = ('');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    const currentTime = Date.now();\n    if (selectedDates[0] <= currentTime) {\n      \n    return window.alert(\"Please choose a date in the future\");}\n    else {\n  userSelectedDate.push(selectedDates);\n   } },\n};\nflatpickr(inputInit, options); \n \n\n\n\n//   Вибір дати\n\n// Відлік часу\n// Для підрахунку значень використовуй готову функцію convertMs, де ms — різниця між кінцевою і поточною датою в мілісекундах.\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\n\n  // ???????\n  // pad(value) {\n  //   return String(value).padStart(2, \"0\");\n  // }\n\n  const timer = new Timer({\n    onTick: updateTimerFace,\n  });\n  \n  \n  startBtn.addEventListener(\"click\", timer.start.bind(timer));\n  function updateTimerFace({ days, hours, mins, secs }) {\n    timerFace.textContent = `${days}:${hours}:${mins}:${secs}`;\n  }\n\n  console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n  console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n  console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n  \n"],"names":["startBtn","timerFace","inputInit","userSelectedDate","options","selectedDates","currentTime","flatpickr","convertMs","ms","days","hours","minutes","seconds","timer","updateTimerFace","mins","secs"],"mappings":"wIAGA,MAAMA,EAAW,SAAS,cAAc,wBAAwB,EAC1DC,EAAY,SAAS,cAAc,QAAQ,EAE3CC,EAAY,SAAS,cAAc,uBAAuB,EAEhE,IAAIC,EAAoB,GACxB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAC5B,MAAMC,EAAc,KAAK,MACzB,GAAID,EAAc,IAAMC,EAExB,OAAO,OAAO,MAAM,oCAAoC,EAE1DH,EAAiB,KAAKE,CAAa,CAC/B,CACN,EACAE,EAAUL,EAAWE,CAAO,EAW5B,SAASI,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAQD,MAAMC,EAAQ,IAAI,MAAM,CACtB,OAAQC,CACZ,CAAG,EAGDf,EAAS,iBAAiB,QAASc,EAAM,MAAM,KAAKA,CAAK,CAAC,EAC1D,SAASC,EAAgB,CAAE,KAAAL,EAAM,MAAAC,EAAO,KAAAK,EAAM,KAAAC,CAAI,EAAI,CACpDhB,EAAU,YAAc,GAAGS,KAAQC,KAASK,KAAQC,GACrD,CAED,QAAQ,IAAIT,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}