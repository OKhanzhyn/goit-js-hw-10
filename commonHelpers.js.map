{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst startBtn = document.querySelector('button[data-start]');\nconst timerFace = document.querySelector(\".timer\");\nconst inputInit = document.querySelector('input#datetime-picker');\n\nstartBtn.disabled = true;\nlet userSelectedDate = '';\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    const currentTime = Date.now();\n    console.log(currentTime);\n    if (selectedDates[0] <= currentTime) {     \n      startBtn.disabled = true; \n      window.alert(\"Please choose a date in the future\");\n    // return\n   }\n    else {\n      startBtn.disabled = false;\n  userSelectedDate.push(selectedDates[0]);\n   } },\n};\nflatpickr(inputInit, options); \n \n\n// Відлік часу\n// Для підрахунку значень використовуй готову функцію convertMs, де ms — різниця між кінцевою і поточною датою в мілісекундах.\n\n\n// const selectors = {\n  // digitalTimer: document.querySelector(\".timer\"),\n  const days = document.querySelector(\"span[data-days]\");\n  const hours = document.querySelector(\"span[data-hours]\");\n  const minutes = document.querySelector(\"span[data-minutes]\");\n  const seconds = document.querySelector(\"span[data-seconds]\");  \n// };\n\n\nlet diff = userSelectedDate - Date.now();\n\nconst countdown = setInterval(function() {\nconst timerDisplay = convertMs(diff);\n//  console.log(timerDisplay);\n document.getElementsByClassName(\".timer\");\n document.getElementsByTagName(\"span[data-days]\");\n document.getElementsByName(\"hours\");\n document.getElementsByName(\"minutes\");\n document.getElementsByName(\"[data-seconds]\");\n}, 1000);\n// console.log(countdown);\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\n\n  // ???????\n  // pad(value) {\n  //   return String(value).padStart(2, \"0\");\n  // }\n\n  // const timer = new Timer({\n  //   onTick: updateTimerFace,\n  // });\n  \n  // startBtn.addEventListener(\"click\", timer.start.bind(timer));\n  function updateTimerFace({ days, hours, minutes, seconds }) {\n    timerFace.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n  }\n\n  console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n  console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n  console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n  \n"],"names":["startBtn","inputInit","userSelectedDate","options","selectedDates","currentTime","flatpickr","convertMs","ms","days","hours","minutes","seconds"],"mappings":"wIAGA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EAC1C,SAAS,cAAc,QAAQ,EACjD,MAAMC,EAAY,SAAS,cAAc,uBAAuB,EAEhED,EAAS,SAAW,GACpB,IAAIE,EAAmB,GACvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAC5B,MAAMC,EAAc,KAAK,MACzB,QAAQ,IAAIA,CAAW,EACnBD,EAAc,IAAMC,GACtBL,EAAS,SAAW,GACpB,OAAO,MAAM,oCAAoC,IAIjDA,EAAS,SAAW,GACxBE,EAAiB,KAAKE,EAAc,EAAE,EAClC,CACN,EACAE,EAAUL,EAAWE,CAAO,EASb,SAAS,cAAc,iBAAiB,EACvC,SAAS,cAAc,kBAAkB,EACvC,SAAS,cAAc,oBAAoB,EAC3C,SAAS,cAAc,oBAAoB,EAM3C,YAAY,UAAW,CAGxC,SAAS,uBAAuB,QAAQ,EACxC,SAAS,qBAAqB,iBAAiB,EAC/C,SAAS,kBAAkB,OAAO,EAClC,SAAS,kBAAkB,SAAS,EACpC,SAAS,kBAAkB,gBAAgB,CAC5C,EAAG,GAAI,EAGP,SAASI,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAiBD,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}